#%RAML 0.2
"title": "Muse: Mule Sales Enablement API"
"version": "v1"
"baseUri": "http://localhost:5273/api"
"schemas":
- "presentation": |
    {  "$schema": "http://json-schema.org/draft-03/schema",
       "type": "object",
       "description": "A product presentation",
       "properties": {
         "id":  { "type": "string" },
         "title":  { "type": "string" },
         "description":  { "type": "string" },
         "fileUrl":  { "type": "string" },
         "productId":  { "type": "string" }
       }
       "required": [ "id", "title", "fileUrl", "productId" ]
    }
- "product": |
    {  "$schema": "http://json-schema.org/draft-03/schema",
       "type": "object",
       "description": "A Product",
       "properties": {
         "id":  { "type": "string" },
         "name":  { "type": "string" },
         "description":  { "type": "string" },
         "imageUrl":  { "type": "string" },
         "region": { "type": "string" }
       }
       "required": [ "id", "name", "region" ]
    }
"resourceTypes":
- &id001 "base":
    description: *id001
- &id002 "collection":
    description: *id002
- &id003 "typedCollection":
    description: *id003
- &id004 "member":
    description: *id004
- &id005 "typedMember":
    description: *id005
"traits":
- &id006 "paged":
    description: *id006
- &id007 "secured":
    description: *id007
"/presentations": &id016
  "type": {"typedCollection": {"schema": "presentation"}}
  "is": ["secured"]
  "/{presentationId}":
    "type": {"typedMember": {"schema": "presentation"}}
    "is": ["secured"]
    "get":
      &id008 "headers": &id009
        "Authorization":
          "description": "The auth token for this request"
      "responses":
        &id010 !!int "401": &id011
          "description": "Unauthorized"
        !!int "200":
          "body":
            "application/json":
              "schema": "presentation"
          "description": "OK"
    "put":
      *id008: *id009
      "body":
        "application/json":
          "schema": "presentation"
      "responses":
        *id010: *id011
        !!int "200":
          "body":
            "application/json":
              "schema": "presentation"
          "description": "OK"
    "patch":
      *id008: *id009
      "body":
        "application/json":
          "schema": "presentation"
      "responses":
        *id010: *id011
        !!int "200":
          "body":
            "application/json":
              "schema": "presentation"
          "description": "OK"
    "delete":
      *id008: *id009
      "responses":
        *id010: *id011
        !!int "200":
          "description": "OK"
  "get":
    &id012 "headers": &id013
      "Authorization":
        "description": "The auth token for this request"
    "queryParameters":
      "title":
        "type": "string"
        "displayName": "title"
        "description": "Filter by title"
      "start":
        "displayName": "start"
        "description": "The first page to return"
        "type": "number"
      "pages":
        "displayName": "pages"
        "description": "The number of pages to return"
        "type": "number"
    "responses":
      &id014 !!int "401": &id015
        "description": "Unauthorized"
      !!int "200":
        "body":
          "application/json":
            "schema": "presentation"
        "description": "OK"
  "post":
    *id012: *id013
    "body":
      "application/json":
        "schema": "presentation"
    "responses":
      *id014: *id015
      !!int "201":
        "body":
          "application/json":
            "schema": "presentation"
        "description": "Created"
"/products":
  "type": {"typedCollection": {"schema": "product"}}
  "is": ["secured"]
  "/{productId}":
    "type": {"typedMember": {"schema": "product"}}
    "is": ["secured"]
    "/presentations": *id016
    "get":
      &id017 "headers": &id018
        "Authorization":
          "description": "The auth token for this request"
      "responses":
        !!int "200":
          "body":
            "application/json":
              "schema": "product"
          "description": "OK"
        &id019 !!int "401": &id020
          "description": "Unauthorized"
    "put":
      "body":
        "application/json":
          "schema": "product"
      *id017: *id018
      "responses":
        !!int "200":
          "body":
            "application/json":
              "schema": "product"
          "description": "OK"
        *id019: *id020
    "patch":
      "body":
        "application/json":
          "schema": "product"
      *id017: *id018
      "responses":
        !!int "200":
          "body":
            "application/json":
              "schema": "product"
          "description": "OK"
        *id019: *id020
    "delete":
      *id017: *id018
      "responses":
        !!int "200":
          "description": "OK"
        *id019: *id020
  "get":
    &id021 "headers": &id022
      "Authorization":
        "description": "The auth token for this request"
    "queryParameters":
      "region":
        "type": "string"
        "displayName": "region"
        "description": "Filter by region"
      "start":
        "displayName": "start"
        "description": "The first page to return"
        "type": "number"
      "pages":
        "displayName": "pages"
        "description": "The number of pages to return"
        "type": "number"
    "responses":
      &id023 !!int "401": &id024
        "description": "Unauthorized"
      !!int "200":
        "body":
          "application/json":
            "schema": "product"
        "description": "OK"
  "post":
    "body":
      "application/json":
        "schema": "product"
    *id021: *id022
    "responses":
      !!int "201":
        "body":
          "application/json":
            "schema": "product"
        "description": "Created"
      *id023: *id024
